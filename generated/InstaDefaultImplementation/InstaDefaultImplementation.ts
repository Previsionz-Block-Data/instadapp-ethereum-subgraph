// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class LogDisableUser extends ethereum.Event {
  get params(): LogDisableUser__Params {
    return new LogDisableUser__Params(this);
  }
}

export class LogDisableUser__Params {
  _event: LogDisableUser;

  constructor(event: LogDisableUser) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class LogEnableUser extends ethereum.Event {
  get params(): LogEnableUser__Params {
    return new LogEnableUser__Params(this);
  }
}

export class LogEnableUser__Params {
  _event: LogEnableUser;

  constructor(event: LogEnableUser) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class InstaDefaultImplementation extends ethereum.SmartContract {
  static bind(address: Address): InstaDefaultImplementation {
    return new InstaDefaultImplementation(
      "InstaDefaultImplementation",
      address
    );
  }

  implementationVersion(): BigInt {
    let result = super.call(
      "implementationVersion",
      "implementationVersion():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_implementationVersion(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "implementationVersion",
      "implementationVersion():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  instaIndex(): Address {
    let result = super.call("instaIndex", "instaIndex():(address)", []);

    return result[0].toAddress();
  }

  try_instaIndex(): ethereum.CallResult<Address> {
    let result = super.tryCall("instaIndex", "instaIndex():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  isAuth(user: Address): boolean {
    let result = super.call("isAuth", "isAuth(address):(bool)", [
      ethereum.Value.fromAddress(user)
    ]);

    return result[0].toBoolean();
  }

  try_isAuth(user: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("isAuth", "isAuth(address):(bool)", [
      ethereum.Value.fromAddress(user)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  version(): BigInt {
    let result = super.call("version", "version():(uint256)", []);

    return result[0].toBigInt();
  }

  try_version(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("version", "version():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class DisableCall extends ethereum.Call {
  get inputs(): DisableCall__Inputs {
    return new DisableCall__Inputs(this);
  }

  get outputs(): DisableCall__Outputs {
    return new DisableCall__Outputs(this);
  }
}

export class DisableCall__Inputs {
  _call: DisableCall;

  constructor(call: DisableCall) {
    this._call = call;
  }

  get user(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class DisableCall__Outputs {
  _call: DisableCall;

  constructor(call: DisableCall) {
    this._call = call;
  }
}

export class EnableCall extends ethereum.Call {
  get inputs(): EnableCall__Inputs {
    return new EnableCall__Inputs(this);
  }

  get outputs(): EnableCall__Outputs {
    return new EnableCall__Outputs(this);
  }
}

export class EnableCall__Inputs {
  _call: EnableCall;

  constructor(call: EnableCall) {
    this._call = call;
  }

  get user(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class EnableCall__Outputs {
  _call: EnableCall;

  constructor(call: EnableCall) {
    this._call = call;
  }
}
