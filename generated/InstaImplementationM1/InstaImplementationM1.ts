// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class LogCast extends ethereum.Event {
  get params(): LogCast__Params {
    return new LogCast__Params(this);
  }
}

export class LogCast__Params {
  _event: LogCast;

  constructor(event: LogCast) {
    this._event = event;
  }

  get origin(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get value(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get targetsNames(): Array<string> {
    return this._event.parameters[3].value.toStringArray();
  }

  get targets(): Array<Address> {
    return this._event.parameters[4].value.toAddressArray();
  }

  get eventNames(): Array<string> {
    return this._event.parameters[5].value.toStringArray();
  }

  get eventParams(): Array<Bytes> {
    return this._event.parameters[6].value.toBytesArray();
  }
}

export class InstaImplementationM1 extends ethereum.SmartContract {
  static bind(address: Address): InstaImplementationM1 {
    return new InstaImplementationM1("InstaImplementationM1", address);
  }

  connectorsM1(): Address {
    let result = super.call("connectorsM1", "connectorsM1():(address)", []);

    return result[0].toAddress();
  }

  try_connectorsM1(): ethereum.CallResult<Address> {
    let result = super.tryCall("connectorsM1", "connectorsM1():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _instaIndex(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _connectors(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class CastCall extends ethereum.Call {
  get inputs(): CastCall__Inputs {
    return new CastCall__Inputs(this);
  }

  get outputs(): CastCall__Outputs {
    return new CastCall__Outputs(this);
  }
}

export class CastCall__Inputs {
  _call: CastCall;

  constructor(call: CastCall) {
    this._call = call;
  }

  get _targetNames(): Array<string> {
    return this._call.inputValues[0].value.toStringArray();
  }

  get _datas(): Array<Bytes> {
    return this._call.inputValues[1].value.toBytesArray();
  }

  get _origin(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class CastCall__Outputs {
  _call: CastCall;

  constructor(call: CastCall) {
    this._call = call;
  }

  get value0(): Bytes {
    return this._call.outputValues[0].value.toBytes();
  }
}
